services:

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    network_mode: host
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # LOGS
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    network_mode: host
    depends_on:
      - prometheus

  # Traces
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin-slim
    network_mode: host
    ports:
      - 9411:9411
    depends_on:
      - prometheus

  collector:
    container_name: open_telemetry
    image: otel/opentelemetry-collector-contrib
    command: [ "--config=/etc/otel-collector-config.yml" ]
    network_mode: host
    volumes:
      - ./otel/otel-config.yml:/etc/otel-collector-config.yml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    depends_on:
      - prometheus
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana
    network_mode: host
    ports:
      - 3000:3000

  admin-server:
    build:
      context:  app-admin-server
    container_name: admin-server
    network_mode: host
    ports:
      - 8081:8081
    deploy:
      resources:
        limits:
          cpus: '0.500'
          memory: 512M
    healthcheck:
      test: curl --fail http://localhost:8081/actuator/health || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s

  db:
    image: postgres:latest
    container_name: postgresdb
    ports:
      - 5432:5432
    network_mode: host
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres066252
      POSTGRES_DB: observability

  app:
    build:
      context:  app
    container_name: app
    network_mode: host
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres066252
      DB_HOST: jdbc:postgresql://localhost:5432/observability
      OTEL_TRACES_EXPORTER: zipkin
      OTEL_SERVICE_NAME: app-spring
      JAVA_TOOL_OPTIONS: "-javaagent:/app/opentelemetry-javaagent.jar"
      OTEL_JAVAAGENT_LOGGING: application
      OTEL_EXPORTER_OTLP_ENDPOINT: http://localhost:4318
      MANAGEMENT_ZIPKIN_ENABLED: true
      MANAGEMENT_ZIPKIN_BASE_URL: http://localhost:9411/api/v2/spans
      LOKI_BASE_URL: http://localhost:3100/loki/api/v1/push
    depends_on:
      - admin-server
      - collector
      - db

networks:
  backend:
    driver: bridge
